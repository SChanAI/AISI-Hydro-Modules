<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TeknicEIP_old2" Id="{2f18fa1b-dda6-40a9-9f08-82db26b50ee0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TeknicEIP_old2
VAR_INPUT CONSTANT
	bEnable : BOOL;
END_VAR
VAR_OUTPUT
	contact AT %I* : BOOL;
	
	home AT %I* : BOOL;
	outerLimit AT %I* : BOOL;
	innerLimit AT %I* : BOOL;
	cmdDone AT %I* : BOOL;	
	
	homeSet : BOOL;
	busy : BOOL;
	error : BOOL;
	
	position : INT;
END_VAR
VAR
	enable AT %Q* : BOOL; //enable + pulses
	A AT %Q* : BOOL; //direction (F = inwards, T = outwards)
	B AT %Q* : BOOL; //home bit
	brakeRelease AT %Q* : BOOL;
	
	pulser : TON;	
	pulseRequest : INT;
	pulseCounter : INT;
	
	step : Homing;//(IDLE, HOME_UP, HOME_FINAL, DOWN, REDO_HOME, HOME_DONE);
END_VAR
VAR_STAT CONSTANT
	pulseWidth : TIME := T#25MS;
	unitsPerPulse : INT := 800; //800 Teknic units per revolution
	distancePerPulse : INT := 5; //5mm per revolution
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[enable := bEnable;
IF NOT bEnable THEN
	RETURN;
END_IF

pulser(IN:= , PT:= pulseWidth, Q=> , ET=> ); //when timer is enabled, this toggles enable every <pulseWidth>

IF pulseCounter >= pulseRequest THEN
	busy := FALSE;
	
	pulseRequest := 0;
	pulseCounter := 0;
	
	enable := TRUE;
	pulser.IN := FALSE;
	RETURN;
END_IF

busy := TRUE;
pulser.IN := TRUE;

IF pulser.Q THEN
	pulseCounter := pulseCounter + 1;
	enable := NOT enable;
	
	IF enable THEN //enable is TRUE after toggle
		IF A THEN
			position := position + distancePerPulse;
		ELSE
			position := position - distancePerPulse;
		END_IF
	END_IF
	pulser.IN := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="homingSequence" Id="{eae1edc1-1a26-4ff8-938b-14e76a4e0a28}">
      <Declaration><![CDATA[METHOD homingSequence : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE step OF
	Homing.IDLE:
		enable := FALSE;
		A := FALSE;
		B := FALSE;
		brakeRelease := TRUE;
		
		homeSet := FALSE;
		step := Homing.HOME_OUT;
	
	Homing.HOME_OUT:
		enable := TRUE;
		B := TRUE;
		
		IF NOT home THEN
			B := FALSE;
			step := Homing.DONE;
		ELSIF NOT outerLimit THEN
			B := FALSE;
			step := Homing.REDO;
		END_IF
		
	Homing.REDO:		
		requestPulses(1);
		IF NOT innerLimit THEN
			enable := FALSE;
			brakeRelease := FALSE;
			step := Homing.HOME_OUT;
		END_IF
		
	Homing.DONE:
		homeSet := TRUE;
		homingSequence := TRUE;
		step := Homing.IDLE;
	
END_CASE

homingSequence := homeSet;]]></ST>
      </Implementation>
    </Method>
    <Method Name="requestPulses" Id="{d8a62ac4-d451-4079-858d-0751c4227f10}">
      <Declaration><![CDATA[METHOD PRIVATE requestPulses : BOOL
VAR_INPUT
	request : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[requestPulses := cmdDone;

IF cmdDone AND request > 0 THEN
	pulseRequest := request;
	pulseCounter := 0;
	requestPulses := TRUE;
END_IF

(*
IF i < storedRequest THEN
	timer.IN := TRUE;
	
	IF timer.Q THEN
		i := i + 1;
		enable := NOT enable;
	END_IF
ELSE
	enable := TRUE;
	timer.IN := FALSE;
END_IF
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{740a9dec-38e0-4a20-a7f8-7baad161ef34}">
      <Declaration><![CDATA[METHOD reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="travel" Id="{76f62f65-e83e-4060-b65b-f4d25333162f}">
      <Declaration><![CDATA[METHOD travel : BOOL
VAR_INPUT
	direction : BOOL; //direction (F = inwards, T = outwards)
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[A := direction;
travel := requestPulses(1);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TeknicEIP_old2">
      <LineId Id="862" Count="11" />
      <LineId Id="894" Count="0" />
      <LineId Id="874" Count="13" />
      <LineId Id="896" Count="0" />
      <LineId Id="889" Count="0" />
      <LineId Id="895" Count="0" />
      <LineId Id="891" Count="2" />
      <LineId Id="651" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old2.homingSequence">
      <LineId Id="98" Count="36" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old2.requestPulses">
      <LineId Id="71" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="122" Count="2" />
      <LineId Id="126" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="131" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old2.reset">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old2.travel">
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
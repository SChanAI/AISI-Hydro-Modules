<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TeknicEIP_old" Id="{668f31ab-c32e-4358-82c0-60575d137515}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TeknicEIP_old
VAR
	enable AT %Q* : BOOL;
	A AT %Q* : BOOL;
	B AT %Q* : BOOL;
	disableBrake AT %Q* : BOOL;
	
	homingStep : (IDLE, HOME_UP, HOME_FINAL, DOWN, REDO_HOME, HOME_DONE);
	testStep : (TEST_IDLE, TEST_UP, TEST_DOWN, TEST_DONE);
	
	storedRequest : INT;
	//active : BOOL;

	timer : TON;
	i : INT;
END_VAR
VAR_OUTPUT
	atHome AT %I* : BOOL;
	homeLimit AT %I* : BOOL;
	travelLimit AT %I* : BOOL;
	
	homeSet : BOOL;
	
	cmdDone AT %I* : BOOL;
	
	traverseLimits : ARRAY[0..1] OF REAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF i < storedRequest THEN
	timer.IN := TRUE;
	
	IF timer.Q THEN
		i := i + 1;
		enable := NOT enable;
	END_IF
ELSE
	enable := TRUE;
	timer.IN := FALSE;
END_IF

//if i >= storedRequest then no more pulses will be generated, storedRequest does not need to be set to 0]]></ST>
    </Implementation>
    <Folder Name="Helpers" Id="{f46fd7c9-8ed7-461c-b9a8-774f8c948025}" />
    <Method Name="home" Id="{de17b18a-5b16-4271-bf39-f9d8af0e059d}">
      <Declaration><![CDATA[METHOD home : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE homingStep OF
	IDLE:
		enable := FALSE;
		A := FALSE;
		B := FALSE;
		//disableBrake := FALSE;
		
		//IF execute THEN
			//execute := FALSE;
			disableBrake := TRUE;
			homeSet := FALSE;
			
			homingStep := HOME_UP;
		//END_IF
	
	HOME_UP:
		enable := TRUE;
		B := TRUE;
		
		IF NOT atHome THEN
			B := FALSE;
			homingStep := HOME_DONE;
		ELSIF NOT homeLimit THEN
			B := FALSE;
			homingStep := REDO_HOME;
		END_IF
		
	REDO_HOME:		
		requestPulses(1);
		IF NOT travelLimit THEN
			enable := FALSE;
			disableBrake := FALSE;
			homingStep := HOME_UP;
		END_IF
		
	HOME_DONE:
		homeSet := TRUE;
		home := TRUE;
		homingStep := IDLE;
	
END_CASE

home := homeSet;]]></ST>
      </Implementation>
    </Method>
    <Method Name="press" Id="{74162415-3e8e-42c3-b50a-b731da0246b1}">
      <Declaration><![CDATA[METHOD press : BOOL
VAR_INPUT
	distance : REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[requestPulses(TO_INT(distance/5));]]></ST>
      </Implementation>
    </Method>
    <Method Name="requestPulses" Id="{86f56a01-7fff-4f91-a0ab-1355c6f2262d}" FolderPath="Helpers\">
      <Declaration><![CDATA[METHOD requestPulses : BOOL
VAR_INPUT
	request : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[requestPulses := cmdDone;

IF cmdDone (*AND request > 0*) THEN
	storedRequest := request;
	i := 0;
END_IF

(*
IF i < storedRequest THEN
	timer.IN := TRUE;
	
	IF timer.Q THEN
		i := i + 1;
		enable := NOT enable;
	END_IF
ELSE
	enable := TRUE;
	timer.IN := FALSE;
END_IF
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{f33e4416-7cea-4ad8-9ff4-0e1a44f1ced7}">
      <Declaration><![CDATA[METHOD reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="testMovement" Id="{366558dd-055d-4ac7-b71b-0d4aa867d694}">
      <Declaration><![CDATA[METHOD testMovement : BOOL
(*
this method should only be called if homing is finished
will return FALSE and not execute if motor is not homed
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT homeSet THEN
	testMovement := FALSE;
	RETURN;
END_IF

timer(IN:= , PT:= T#25MS, Q=> , ET=> );

CASE testStep OF
	TEST_IDLE:
		(*
		enable := FALSE;
		A := FALSE;
		B := FALSE;
		disableBrake := FALSE;
		*)
		
		testStep := TEST_DOWN;
		
	TEST_DOWN:
		A := TRUE;
		disableBrake := TRUE;
		
		requestPulses(1);
		IF NOT travelLimit THEN
			testStep := TEST_UP;
		END_IF
	
	TEST_UP:
		A := FALSE;
		disableBrake := TRUE;
		
		requestPulses(1);
		IF NOT atHome THEN
			testStep := TEST_DONE;
		ELSIF NOT homeLimit THEN
			testStep := TEST_DOWN;
		END_IF
		
	TEST_DONE:
		enable := FALSE;
		disableBrake := FALSE;
		
		testMovement := TRUE;
		testStep := TEST_IDLE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TeknicEIP_old">
      <LineId Id="262" Count="9" />
      <LineId Id="96" Count="0" />
      <LineId Id="416" Count="0" />
      <LineId Id="415" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.home">
      <LineId Id="55" Count="41" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.press">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.requestPulses">
      <LineId Id="71" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="122" Count="2" />
      <LineId Id="126" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="131" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.reset">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TeknicEIP_old.testMovement">
      <LineId Id="57" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="6" Count="3" />
      <LineId Id="108" Count="0" />
      <LineId Id="10" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="105" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="97" Count="1" />
      <LineId Id="101" Count="1" />
      <LineId Id="20" Count="1" />
      <LineId Id="104" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="110" Count="1" />
      <LineId Id="67" Count="1" />
      <LineId Id="72" Count="2" />
      <LineId Id="69" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
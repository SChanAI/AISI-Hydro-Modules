<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="GenericStagingTable" Id="{86f30268-c033-4b26-ab89-12e7cd4acf96}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK GenericStagingTable EXTENDS GenericMaterialHolder
VAR_OUTPUT
	//hmiSlots : ARRAY[1..numSlots] OF MaterialSlot;
END_VAR
VAR
	i : DINT(1..10);
END_VAR
VAR_STAT CONSTANT
	numSlots : UINT := SIZEOF(tableSlotsA21Left)/SIZEOF(tableSlotsA21Left[1]);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();
(*
FOR i:=LOWER_BOUND(slots, 1) TO UPPER_BOUND(slots, 1) BY 1 DO
	hmiSlots[i].material := slots[i];
	hmiSlots[i].occupied := occupied[i];
END_FOR
*)]]></ST>
    </Implementation>
    <Method Name="autofill" Id="{85f89965-dfb3-421e-9fdd-f8a8434c5c09}">
      <Declaration><![CDATA[METHOD autofill : BOOL
VAR_INPUT
	materialID : STRING;
END_VAR
VAR
	i : INT;
	slot : INT;
END_VAR
(*
this method will automatically find an open slot
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF isFull() OR materialID = '' THEN
	RETURN;
END_IF

IF findOpenSlot(materialID, openSlot=> slot) THEN
	place(slot, materialID);
	autofill := TRUE;
	
	//ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_ERROR , msgFmtStr := 'autofill: %s', strArg := materialID);
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="findOpenSlot" Id="{70b64d97-b0dd-4604-bcf4-e5f1f840892d}">
      <Declaration><![CDATA[METHOD findOpenSlot : BOOL
VAR_INPUT
	materialID : STRING;
END_VAR
VAR_OUTPUT
	openSlot : INT := 0;
END_VAR
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FIND(materialID, 'WDW') > 0 THEN //top wide, load in slot 9-10
	FOR i:=9 TO 10 BY 1 DO
		IF slots[i] = '' THEN
			findOpenSlot := TRUE;
			openSlot := i;
			RETURN;
		END_IF
	END_FOR
	
//ELSIF FIND(materialID, 'WDT') > 0 OR FIND(materialID, 'WDS') > 0 THEN //standard width, load in slot 3-10
ELSIF FIND(materialID, 'WD') > 0 THEN //standard width, load in slot 1-8
	FOR i:=1 TO 8 BY 1 DO
		IF slots[i] = '' THEN
			findOpenSlot := TRUE;
			openSlot := i;
			RETURN;
		END_IF
	END_FOR
	
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="findSlot" Id="{6eb1e5d2-5dfb-4973-9008-93aea3b02a25}">
      <Declaration><![CDATA[METHOD findSlot : BOOL
VAR_INPUT
	materialID : STRING;
END_VAR
VAR_OUTPUT
	atSlot : INT;
END_VAR
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=1 TO numSlots BY 1 DO
	IF slots[i] = materialID THEN
		atSlot := i;
		findSlot := TRUE;
		RETURN;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="isEmpty" Id="{853383cf-82c8-43ea-b031-c9c33787565e}">
      <Declaration><![CDATA[METHOD isEmpty : BOOL
VAR
	i : INT;
	temp : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=1 TO numSlots BY 1 DO
	temp := temp OR occupied[i]; //TRUE if any slots are occupied
END_FOR

isEmpty := NOT temp; //invert result - FALSE if any slots are occupied]]></ST>
      </Implementation>
    </Method>
    <Method Name="isFull" Id="{debc6f61-e9f5-4fcf-9975-806ae5e84cf7}">
      <Declaration><![CDATA[METHOD isFull : BOOL
VAR
	i : INT;
	temp : BOOL := TRUE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:=1 TO numSlots BY 1 DO
	temp := temp AND occupied[i];
END_FOR

isFull := temp;]]></ST>
      </Implementation>
    </Method>
    <Method Name="place" Id="{bb7401bd-65d3-4fcc-bcf4-393f54f9df10}">
      <Declaration><![CDATA[METHOD place : BOOL
VAR_INPUT
	i : INT;
	materialID : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF slots[i] = '' THEN
	slots[i] := materialID;
	place := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="remove" Id="{3a843bdc-d585-4891-a014-f6828230b4c8}">
      <Declaration><![CDATA[METHOD remove : BOOL
VAR_INPUT
	i : INT;
END_VAR
VAR_OUTPUT
	materialID : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[remove := slots[i] <> '';

materialID := slots[i];
slots[i] := '';
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="GenericStagingTable">
      <LineId Id="80" Count="1" />
      <LineId Id="85" Count="2" />
      <LineId Id="83" Count="0" />
      <LineId Id="44" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.autofill">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="34" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.findOpenSlot">
      <LineId Id="63" Count="9" />
      <LineId Id="90" Count="0" />
      <LineId Id="73" Count="7" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.findSlot">
      <LineId Id="52" Count="5" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.isEmpty">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.isFull">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.place">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="GenericStagingTable.remove">
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>